{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "@aws-cdk/core.Construct",
          "version": "1.110.1"
        }
      },
      "quickstart": {
        "id": "quickstart",
        "path": "quickstart",
        "children": {
          "IdeStackTemplateURL": {
            "id": "IdeStackTemplateURL",
            "path": "quickstart/IdeStackTemplateURL",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnParameter",
              "version": "1.110.1"
            }
          },
          "CloudFormationRole": {
            "id": "CloudFormationRole",
            "path": "quickstart/CloudFormationRole",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
              "aws:cdk:cloudformation:props": {
                "assumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "cloudformation.amazonaws.com"
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "policies": [
                  {
                    "policyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "cloud9:DeleteEnvironment",
                            "cloud9:DescribeEnvironments",
                            "codecommit:*",
                            "codebuild:*",
                            "codepipeline:*",
                            "events:*",
                            "iam:*",
                            "lambda:*",
                            "s3:*",
                            "sns:*",
                            "ssm:DeleteDocument",
                            "ssm:DescribeDocument",
                            "ssm:GetDocument"
                          ],
                          "Resource": "*"
                        }
                      ]
                    },
                    "policyName": "root"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.CfnRole",
              "version": "1.115.0"
            }
          },
          "Bucket": {
            "id": "Bucket",
            "path": "quickstart/Bucket",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
              "aws:cdk:cloudformation:props": {
                "lifecycleConfiguration": {
                  "rules": [
                    {
                      "abortIncompleteMultipartUpload": {
                        "daysAfterInitiation": 30
                      },
                      "noncurrentVersionExpirationInDays": 90,
                      "noncurrentVersionTransitions": [
                        {
                          "storageClass": "STANDARD_IA",
                          "transitionInDays": 30
                        }
                      ],
                      "status": "Enabled",
                      "transitions": [
                        {
                          "storageClass": "STANDARD_IA",
                          "transitionInDays": 30
                        }
                      ]
                    }
                  ]
                },
                "versioningConfiguration": {
                  "status": "Enabled"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-s3.CfnBucket",
              "version": "1.115.0"
            }
          },
          "LambdaRole": {
            "id": "LambdaRole",
            "path": "quickstart/LambdaRole",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
              "aws:cdk:cloudformation:props": {
                "assumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "lambda.amazonaws.com"
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "policies": [
                  {
                    "policyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "ec2:AssociateIamInstanceProfile",
                            "ec2:DescribeInstances",
                            "ec2:RebootInstances",
                            "iam:PassRole",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "s3:DeleteObject",
                            "s3:DeleteObjectVersion",
                            "s3:ListBucketVersions",
                            "s3:PutObject",
                            "ssm:DescribeInstanceInformation",
                            "ssm:SendCommand"
                          ],
                          "Resource": "*"
                        }
                      ]
                    },
                    "policyName": "root"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.CfnRole",
              "version": "1.115.0"
            }
          },
          "Function": {
            "id": "Function",
            "path": "quickstart/Function",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
              "aws:cdk:cloudformation:props": {
                "code": {
                  "zipFile": "import boto3, json, shutil, urllib3, zipfile\n\nhttp = urllib3.PoolManager()\n\nGITHUB_ACCOUNT_NAME = 'aws-quickstart'\nGITHUB_REPOSITORY_NAME = 'quickstart-shi-crpm'\n\ndef lambda_handler(event, context):\n    print('Event:', event['RequestType'])\n    \n    artifact_bucket_name = event['ResourceProperties']['ArtifactBucketName']\n    print('Artifact Bucket Name:', artifact_bucket_name)\n    \n    empty_bucket_on_delete = event['ResourceProperties']['EmptyBucketOnDelete']\n    print('Empty Bucket On Delete:', empty_bucket_on_delete)\n    \n    if (event['RequestType'] == 'Create'):\n        try:\n            with http.request('GET', 'https://codeload.github.com/{}/{}/zip/main'.format(GITHUB_ACCOUNT_NAME, GITHUB_REPOSITORY_NAME), preload_content=False) as res, open('/tmp/source.zip', 'wb') as out_file:\n                shutil.copyfileobj(res, out_file)\n            \n            with zipfile.ZipFile('/tmp/source.zip', 'r') as zf:\n                zf.extractall('/tmp')\n            \n            shutil.make_archive('/tmp/source2', 'zip', '/tmp/{}-main'.format(GITHUB_REPOSITORY_NAME))\n            \n            s3 = boto3.client('s3')\n            with open('/tmp/source2.zip', 'rb') as f:\n                s3.upload_fileobj(f, artifact_bucket_name, 'quick-start/Source/{}.zip'.format(GITHUB_REPOSITORY_NAME))\n            \n            print('Copied quick start source from GitHub to S3')\n            return send(event, context, 'SUCCESS')\n        except:\n            return send(event, context, 'FAILED', 'Could not copy quick start source from GitHub to S3')\n    elif (event['RequestType'] == 'Delete' and empty_bucket_on_delete):\n        try:\n            client = boto3.client('s3')\n            paginator = client.get_paginator('list_object_versions')\n            response_iterator = paginator.paginate(Bucket=artifact_bucket_name)\n            for response in response_iterator:\n                versions = response.get('Versions', [])\n                versions.extend(response.get('DeleteMarkers', []))\n                for key, version_id in [[v['Key'], v['VersionId']] for v in versions]:\n                    client.delete_object(Bucket=artifact_bucket_name, Key=key, VersionId=version_id)\n        except:\n            return send(event, context, 'FAILED', 'Could not empty bucket')\n    \n    send(event, context, 'SUCCESS')\n\ndef send(event, context, status, data=''):\n    body = {\n        'Status': status,\n        'Reason': 'See the details in CloudWatch Log Stream: ' + context.log_stream_name,\n        'PhysicalResourceId': context.log_stream_name,\n        'StackId': event['StackId'],\n        'RequestId': event['RequestId'],\n        'LogicalResourceId': event['LogicalResourceId'],\n        'NoEcho': False,\n        'Data': {'Data': data}\n    }\n    \n    json_body = json.dumps(body)\n    \n    headers = {\n        'content-type': '',\n        'content-length': str(len(json_body))\n    }\n    \n    http.request('PUT', event['ResponseURL'], body=json_body, headers=headers)\n"
                },
                "role": {
                  "Fn::GetAtt": [
                    "LambdaRole",
                    "Arn"
                  ]
                },
                "description": "Clones the Quick Start source code and saves it in an S3 artifact bucket on creation, and empties the bucket on deletion",
                "handler": "index.lambda_handler",
                "runtime": "python3.6",
                "timeout": 300
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-lambda.CfnFunction",
              "version": "1.115.0"
            }
          },
          "CustomResource": {
            "id": "CustomResource",
            "path": "quickstart/CustomResource",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::CloudFormation::CustomResource",
              "aws:cdk:cloudformation:props": {
                "serviceToken": {
                  "Fn::GetAtt": [
                    "Function",
                    "Arn"
                  ]
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cloudformation.CfnCustomResource",
              "version": "1.115.0"
            }
          },
          "Repository": {
            "id": "Repository",
            "path": "quickstart/Repository",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::CodeCommit::Repository",
              "aws:cdk:cloudformation:props": {
                "repositoryName": {
                  "Ref": "AWS::StackName"
                },
                "code": {
                  "s3": {
                    "key": "quick-start/Source/quickstart-shi-crpm.zip",
                    "bucket": {
                      "Ref": "Bucket"
                    }
                  }
                },
                "repositoryDescription": "Infrastructure repository created by an AWS Quick Start."
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-codecommit.CfnRepository",
              "version": "1.115.0"
            }
          },
          "CodeBuildRole": {
            "id": "CodeBuildRole",
            "path": "quickstart/CodeBuildRole",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
              "aws:cdk:cloudformation:props": {
                "assumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "codebuild.amazonaws.com"
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "policies": [
                  {
                    "policyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Action": [
                            "cloudformation:ValidateTemplate",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "s3:GetObject",
                            "s3:PutObject"
                          ],
                          "Resource": "*",
                          "Effect": "Allow"
                        }
                      ]
                    },
                    "policyName": "root"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.CfnRole",
              "version": "1.115.0"
            }
          },
          "Project": {
            "id": "Project",
            "path": "quickstart/Project",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
              "aws:cdk:cloudformation:props": {
                "artifacts": {
                  "type": "CODEPIPELINE"
                },
                "environment": {
                  "computeType": "BUILD_GENERAL1_SMALL",
                  "image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
                  "type": "LINUX_CONTAINER",
                  "environmentVariables": [
                    {
                      "name": "IDE_STACK_TEMPLATE_URL",
                      "value": {
                        "Ref": "IdeStackTemplateURL"
                      }
                    }
                  ]
                },
                "serviceRole": {
                  "Fn::GetAtt": [
                    "CodeBuildRole",
                    "Arn"
                  ]
                },
                "source": {
                  "type": "CODEPIPELINE"
                },
                "description": "Build CloudFormation templates"
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-codebuild.CfnProject",
              "version": "1.115.0"
            }
          },
          "CodePipelineRole": {
            "id": "CodePipelineRole",
            "path": "quickstart/CodePipelineRole",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
              "aws:cdk:cloudformation:props": {
                "assumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "codepipeline.amazonaws.com"
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "policies": [
                  {
                    "policyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStacks",
                            "cloudformation:UpdateStack",
                            "cloudformation:CreateChangeSet",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:SetStackPolicy",
                            "cloudformation:ValidateTemplate",
                            "codebuild:BatchGetBuilds",
                            "codebuild:StartBuild",
                            "codecommit:GetBranch",
                            "codecommit:GetCommit",
                            "codecommit:UploadArchive",
                            "codecommit:GetUploadArchiveStatus",
                            "codecommit:CancelUploadArchive",
                            "iam:PassRole",
                            "s3:GetObject",
                            "s3:PutObject",
                            "sns:Publish"
                          ],
                          "Resource": "*"
                        }
                      ]
                    },
                    "policyName": "root"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.CfnRole",
              "version": "1.115.0"
            }
          },
          "Pipeline": {
            "id": "Pipeline",
            "path": "quickstart/Pipeline",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
              "aws:cdk:cloudformation:props": {
                "roleArn": {
                  "Fn::GetAtt": [
                    "CodePipelineRole",
                    "Arn"
                  ]
                },
                "stages": [
                  {
                    "actions": [
                      {
                        "actionTypeId": {
                          "category": "Source",
                          "owner": "AWS",
                          "provider": "CodeCommit",
                          "version": "1"
                        },
                        "configuration": {
                          "BranchName": "main",
                          "PollForSourceChanges": "false",
                          "RepositoryName": {
                            "Fn::GetAtt": [
                              "Repository",
                              "Name"
                            ]
                          }
                        },
                        "name": "Fetch",
                        "outputArtifacts": [
                          {
                            "name": "Source"
                          }
                        ]
                      }
                    ],
                    "name": "Source"
                  },
                  {
                    "actions": [
                      {
                        "actionTypeId": {
                          "category": "Build",
                          "owner": "AWS",
                          "provider": "CodeBuild",
                          "version": "1"
                        },
                        "configuration": {
                          "ProjectName": {
                            "Ref": "Project"
                          }
                        },
                        "inputArtifacts": [
                          {
                            "name": "Source"
                          }
                        ],
                        "name": "SynthesizeAndTest",
                        "outputArtifacts": [
                          {
                            "name": "Package"
                          }
                        ]
                      }
                    ],
                    "name": "Build"
                  },
                  {
                    "actions": [
                      {
                        "actionTypeId": {
                          "category": "Deploy",
                          "owner": "AWS",
                          "provider": "CloudFormation",
                          "version": "1"
                        },
                        "configuration": {
                          "ActionMode": "CHANGE_SET_REPLACE",
                          "Capabilities": "CAPABILITY_IAM,CAPABILITY_NAMED_IAM",
                          "ChangeSetName": "pipeline",
                          "OutputFileName": "create-change-set/pipeline.json",
                          "TemplatePath": "Package::cdk.out/quickstart.template.json",
                          "ParameterOverrides": {
                            "Fn::Join": [
                              "",
                              [
                                "{\"IdeStackTemplateURL\": \"",
                                {
                                  "Ref": "IdeStackTemplateURL"
                                },
                                "\"}"
                              ]
                            ]
                          },
                          "RoleArn": {
                            "Fn::GetAtt": [
                              "CloudFormationRole",
                              "Arn"
                            ]
                          },
                          "StackName": {
                            "Ref": "AWS::StackName"
                          }
                        },
                        "inputArtifacts": [
                          {
                            "name": "Package"
                          }
                        ],
                        "name": "ReplaceChangeSet",
                        "runOrder": 1
                      },
                      {
                        "actionTypeId": {
                          "category": "Approval",
                          "owner": "AWS",
                          "provider": "Manual",
                          "version": "1"
                        },
                        "name": "Approve",
                        "runOrder": 2
                      }
                    ],
                    "name": "Review"
                  },
                  {
                    "actions": [
                      {
                        "actionTypeId": {
                          "category": "Deploy",
                          "owner": "AWS",
                          "provider": "CloudFormation",
                          "version": "1"
                        },
                        "configuration": {
                          "ActionMode": "CHANGE_SET_EXECUTE",
                          "Capabilities": "CAPABILITY_IAM,CAPABILITY_NAMED_IAM",
                          "ChangeSetName": "pipeline",
                          "OutputFileName": "execute-change-set/pipeline.json",
                          "TemplatePath": "Package::cdk.out/quickstart.template.json",
                          "ParameterOverrides": {
                            "Fn::Join": [
                              "",
                              [
                                "{\"IdeStackTemplateURL\": \"",
                                {
                                  "Ref": "IdeStackTemplateURL"
                                },
                                "\"}"
                              ]
                            ]
                          },
                          "RoleArn": {
                            "Fn::GetAtt": [
                              "CloudFormationRole",
                              "Arn"
                            ]
                          },
                          "StackName": {
                            "Ref": "AWS::StackName"
                          }
                        },
                        "inputArtifacts": [
                          {
                            "name": "Package"
                          }
                        ],
                        "name": "ExecuteChangeSet"
                      }
                    ],
                    "name": "Deploy"
                  }
                ],
                "artifactStore": {
                  "location": {
                    "Ref": "Bucket"
                  },
                  "type": "S3"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline",
              "version": "1.115.0"
            }
          },
          "EventsRole": {
            "id": "EventsRole",
            "path": "quickstart/EventsRole",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
              "aws:cdk:cloudformation:props": {
                "assumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "events.amazonaws.com"
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "policies": [
                  {
                    "policyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": "codepipeline:StartPipelineExecution",
                          "Resource": "*"
                        }
                      ]
                    },
                    "policyName": "root"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.CfnRole",
              "version": "1.115.0"
            }
          },
          "Rule": {
            "id": "Rule",
            "path": "quickstart/Rule",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::Events::Rule",
              "aws:cdk:cloudformation:props": {
                "description": "Triggers a pipeline to update the current infrastructure to match the current main branch.",
                "eventPattern": {
                  "source": [
                    "aws.codecommit"
                  ],
                  "detail-type": [
                    "CodeCommit Repository State Change"
                  ],
                  "detail": {
                    "referenceType": [
                      "branch"
                    ],
                    "referenceName": [
                      "main"
                    ]
                  },
                  "resources": [
                    {
                      "Fn::GetAtt": [
                        "Repository",
                        "Arn"
                      ]
                    }
                  ]
                },
                "targets": [
                  {
                    "id": "codepipeline",
                    "arn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:codepipeline:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":",
                          {
                            "Ref": "Pipeline"
                          }
                        ]
                      ]
                    },
                    "roleArn": {
                      "Fn::GetAtt": [
                        "EventsRole",
                        "Arn"
                      ]
                    }
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-events.CfnRule",
              "version": "1.115.0"
            }
          },
          "Stack": {
            "id": "Stack",
            "path": "quickstart/Stack",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::CloudFormation::Stack",
              "aws:cdk:cloudformation:props": {
                "templateUrl": {
                  "Ref": "IdeStackTemplateURL"
                },
                "parameters": {
                  "RepoName": {
                    "Fn::GetAtt": [
                      "Repository",
                      "Name"
                    ]
                  }
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cloudformation.CfnStack",
              "version": "1.115.0"
            }
          },
          "CodeCommitURL": {
            "id": "CodeCommitURL",
            "path": "quickstart/CodeCommitURL",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnOutput",
              "version": "1.110.1"
            }
          },
          "CodePipelineName": {
            "id": "CodePipelineName",
            "path": "quickstart/CodePipelineName",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnOutput",
              "version": "1.110.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "quickstart/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "quickstart/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.110.1"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "quickstart/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnCondition",
                  "version": "1.110.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.110.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.110.1"
        }
      },
      "ide": {
        "id": "ide",
        "path": "ide",
        "children": {
          "RepoName": {
            "id": "RepoName",
            "path": "ide/RepoName",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnParameter",
              "version": "1.110.1"
            }
          },
          "EnvironmentEC2": {
            "id": "EnvironmentEC2",
            "path": "ide/EnvironmentEC2",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::Cloud9::EnvironmentEC2",
              "aws:cdk:cloudformation:props": {
                "instanceType": "t3.small",
                "description": "Created by an AWS Quick Start.  CRPM is pre-installed and the infrastructure code main branch is checked out.",
                "name": {
                  "Ref": "AWS::StackName"
                },
                "repositories": [
                  {
                    "pathComponent": "/quick-start",
                    "repositoryUrl": {
                      "Fn::Join": [
                        "",
                        [
                          "https://git-codecommit.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".amazonaws.com/v1/repos/",
                          {
                            "Ref": "RepoName"
                          }
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cloud9.CfnEnvironmentEC2",
              "version": "1.115.0"
            }
          },
          "EC2Role": {
            "id": "EC2Role",
            "path": "ide/EC2Role",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
              "aws:cdk:cloudformation:props": {
                "assumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "ec2.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "description": "This role is included in an instance profile that is associated with an EC2 instance so SSM commands can be run on it",
                "managedPolicyArns": [
                  "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.CfnRole",
              "version": "1.115.0"
            }
          },
          "InstanceProfile": {
            "id": "InstanceProfile",
            "path": "ide/InstanceProfile",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
              "aws:cdk:cloudformation:props": {
                "roles": [
                  {
                    "Ref": "EC2Role"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.CfnInstanceProfile",
              "version": "1.115.0"
            }
          },
          "Document": {
            "id": "Document",
            "path": "ide/Document",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::SSM::Document",
              "aws:cdk:cloudformation:props": {
                "content": {
                  "schemaVersion": "2.2",
                  "description": "Configure Cloud9 Amazon Linux EC2 instance",
                  "mainSteps": [
                    {
                      "action": "aws:runShellScript",
                      "name": "InstallCRPM",
                      "inputs": {
                        "runCommand": [
                          "runuser -l ec2-user -c 'npm install -g crpm typescript'"
                        ],
                        "timeoutSeconds": 3600
                      }
                    }
                  ]
                },
                "documentType": "Command"
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ssm.CfnDocument",
              "version": "1.115.0"
            }
          },
          "LambdaRole": {
            "id": "LambdaRole",
            "path": "ide/LambdaRole",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
              "aws:cdk:cloudformation:props": {
                "assumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "lambda.amazonaws.com"
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "policies": [
                  {
                    "policyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "ec2:AssociateIamInstanceProfile",
                            "ec2:DescribeInstances",
                            "ec2:RebootInstances",
                            "iam:PassRole",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "s3:DeleteObject",
                            "s3:DeleteObjectVersion",
                            "s3:ListBucketVersions",
                            "s3:PutObject",
                            "ssm:DescribeInstanceInformation",
                            "ssm:SendCommand"
                          ],
                          "Resource": "*"
                        }
                      ]
                    },
                    "policyName": "root"
                  }
                ]
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.CfnRole",
              "version": "1.115.0"
            }
          },
          "Function": {
            "id": "Function",
            "path": "ide/Function",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
              "aws:cdk:cloudformation:props": {
                "code": {
                  "zipFile": "const aws = require('aws-sdk');\nconst response = require('cfn-response');\nconst util = require('util');\n\nconst ec2 = new aws.EC2({ apiVersion: '2016-11-15' });\nconst ssm = new aws.SSM({ apiVersion: '2014-11-06' });\nconst send = util.promisify(response.send);\n\nexports.handler =  async function(event, context) {\n  const cloud9EnvironmentId = event.ResourceProperties.cloud9EnvironmentId;\n  console.log(event.RequestType, 'Cloud9 Environment:', cloud9EnvironmentId);\n  \n  if (event.RequestType != 'Create') {\n    await send(event, context, response.SUCCESS);\n    return;\n  }\n  \n  try {\n    const instanceParams = {\n      Filters: [\n        {\n          Name: 'tag:aws:cloud9:environment',\n          Values: [\n            cloud9EnvironmentId\n          ]\n        }\n      ]\n    };\n    \n    // Get the instance ID\n    let data = await ec2.describeInstances(instanceParams).promise();\n    const instanceId = data.Reservations[0].Instances[0].InstanceId;\n    console.log('Instance ID:', instanceId);\n      \n    // Associate an instance profile for SSM\n    const instanceProfileName = event.ResourceProperties.instanceProfileName;\n    await ec2.associateIamInstanceProfile({\n      IamInstanceProfile: {\n        Name: instanceProfileName\n      },\n      InstanceId: instanceId\n    }).promise();\n    console.log('Associated instance profile', instanceProfileName);\n    \n    // Reboot the instance to make it available in SSM sooner\n    console.log('Rebooting Instance');\n    await ec2.rebootInstances({\n      InstanceIds: [\n        instanceId\n      ]\n    }).promise();\n    \n    // Wait for the instance to be running\n    await ec2.waitFor('instanceRunning', instanceParams).promise();\n    console.log('Instance Running');\n    \n    for (var i = 0; i < 16; i++) {\n      console.log('Waiting for SSM');\n      data = await ssm.describeInstanceInformation({\n        Filters: [\n          {\n            Key: 'InstanceIds',\n            Values: [\n              instanceId\n            ]\n          }\n        ]\n      }).promise();\n      if (data.InstanceInformationList.length > 0) {\n        console.log('Instance Ready');\n        break;\n      } else if (i == 15) {\n        await send(event, context, response.FAILED, { Error: 'Instance is not available in SSM' });\n      }\n      \n      // Sleep 15 seconds\n      await new Promise((resolve) => setTimeout(resolve, 15000));\n    }\n    \n    // Run a configuration script on the instance\n    const ssmDocumentName = event.ResourceProperties.ssmDocumentName;\n    data = await ssm.sendCommand({\n      DocumentName: ssmDocumentName,\n      CloudWatchOutputConfig: {\n        CloudWatchLogGroupName: `/aws/lambda/${context.functionName}`,\n        CloudWatchOutputEnabled: true\n      },\n      Comment: 'Configure Cloud9 Environment',\n      InstanceIds: [\n        instanceId\n      ]\n    }).promise();\n    console.log('Sent configuration script for execution via SSM', ssmDocumentName);\n  } catch (err) {\n    await send(event, context, response.FAILED, err);\n    return;\n  }\n  \n  await send(event, context, response.SUCCESS);\n};\n"
                },
                "role": {
                  "Fn::GetAtt": [
                    "LambdaRole",
                    "Arn"
                  ]
                },
                "description": "Configures a Cloud9 instance",
                "handler": "index.handler",
                "runtime": "nodejs14.x",
                "timeout": 300
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-lambda.CfnFunction",
              "version": "1.115.0"
            }
          },
          "CustomResource": {
            "id": "CustomResource",
            "path": "ide/CustomResource",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::CloudFormation::CustomResource",
              "aws:cdk:cloudformation:props": {
                "serviceToken": {
                  "Fn::GetAtt": [
                    "Function",
                    "Arn"
                  ]
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cloudformation.CfnCustomResource",
              "version": "1.115.0"
            }
          },
          "Cloud9EnvironmentName": {
            "id": "Cloud9EnvironmentName",
            "path": "ide/Cloud9EnvironmentName",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnOutput",
              "version": "1.110.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "ide/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "ide/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.110.1"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "ide/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnCondition",
                  "version": "1.110.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.110.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.110.1"
        }
      }
    },
    "constructInfo": {
      "fqn": "@aws-cdk/core.App",
      "version": "1.110.1"
    }
  }
}